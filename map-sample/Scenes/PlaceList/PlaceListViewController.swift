//
//  PlaceListViewController.swift
//  map-sample
//
//  Created by inomera on 12.11.2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol PlaceListDisplayLogic: class
{
  func displayPlaces(viewModel: PlaceList.PlaceModel.ViewModel)
}

class PlaceListViewController: UIViewController, PlaceListDisplayLogic
{
  var interactor: PlaceListBusinessLogic?
  var router: (NSObjectProtocol & PlaceListRoutingLogic & PlaceListDataPassing)?

  @IBOutlet weak var tableView: UITableView!
  
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self

    let client = ApiClientImplementation(urlSession: URLSession(configuration: URLSessionConfiguration.default))
    let gateway = ApiPlacesGatewayImplementation(apiClient: client)
    let placesUseCase = DisplayPlacesListUseCaseImplementation(placesGateway: gateway)

    let interactor = PlaceListInteractor()
    let presenter = PlaceListPresenter()
    let router = PlaceListRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    interactor.worker = PlaceListWorker(displayPlacesUseCase: placesUseCase)
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    doSomething()
  }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func doSomething()
  {
    let request = PlaceList.PlaceModel.Request()
    interactor?.fetchPlaces(request: request)
  }
  
  func displayPlaces(viewModel: PlaceList.PlaceModel.ViewModel)
  {
    //nameTextField.text = viewModel.name
  }
}
