//
//  PlaceDetailViewController.swift
//  map-sample
//
//  Created by inomera on 14.11.2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import GoogleMaps

protocol PlaceDetailDisplayLogic: class
{
  func displayMapInfo(viewModel: PlaceDetail.GetPlace.ViewModel)
}

class PlaceDetailViewController: UIViewController, PlaceDetailDisplayLogic
{
  var interactor: PlaceDetailBusinessLogic?
  var router: (NSObjectProtocol & PlaceDetailRoutingLogic & PlaceDetailDataPassing)?

  @IBOutlet weak var nameLabel: UILabel!
  @IBOutlet weak var addressLabel: UILabel!
  @IBOutlet weak var mapsContentView: UIView!

  var mapView: GMSMapView!
  
  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
  {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder)
  {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup()
  {
    let viewController = self
    let interactor = PlaceDetailInteractor()
    let presenter = PlaceDetailPresenter()
    let router = PlaceDetailRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  func setupGoogleMap() {
    let camera = GMSCameraPosition.camera(withLatitude: -33.86, longitude: 151.20, zoom: 6.0)
    
    mapView = GMSMapView.map(withFrame: CGRect(x: 0, y: 0, width: mapsContentView.frame.size.width, height: mapsContentView.frame.size.height), camera: camera)
    self.mapsContentView.addSubview(mapView)
    mapView.autoresizingMask = [.flexibleWidth, .flexibleHeight]
  }
  
  // MARK: Routing
  
  override func prepare(for segue: UIStoryboardSegue, sender: Any?)
  {
    if let scene = segue.identifier {
      let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
      if let router = router, router.responds(to: selector) {
        router.perform(selector, with: segue)
      }
    }
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    
    setupGoogleMap()
    getPlaceDetail()
  }
  
  // MARK: Get Place Detail
  
  func getPlaceDetail()
  {
    let request = PlaceDetail.GetPlace.Request()
    interactor?.getPlaceDetail(request: request)
  }
  
  func displayMapInfo(viewModel: PlaceDetail.GetPlace.ViewModel)
  {
    let displayedPlace = viewModel.displayedPlace
    nameLabel.text = displayedPlace.name
    addressLabel.text = displayedPlace.address
    
    let camera = GMSCameraPosition.camera(withLatitude: displayedPlace.coordinate.latitude, longitude: displayedPlace.coordinate.longitude, zoom: 15.0)
    mapView.camera = camera
    
    let marker = GMSMarker()
    marker.position = CLLocationCoordinate2D(latitude: displayedPlace.coordinate.latitude, longitude: displayedPlace.coordinate.longitude)
    marker.title = displayedPlace.name
//    marker.snippet = "Test Snippet"
    marker.map = mapView
    
  }
}
